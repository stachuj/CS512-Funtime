name: CMake Build Verification

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]

    steps:
    - uses: actions/checkout@v4

    - name: Install Linux Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libx11-dev libxcursor-dev libxi-dev libxrandr-dev libxinerama-dev libgl1-mesa-dev

    - name: Install macOS Dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install cmake pkg-config

    - name: Configure CMake
      run: |
        cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build Project
      run: |
        cmake --build build --config ${{ matrix.build_type }}

    - name: Verify Executable Exists
      run: |
        # Check for exe creation
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          if [ -f "build/Release/${GITHUB_REPOSITORY#*/}.exe" ] || [ -f "build/${GITHUB_REPOSITORY#*/}.exe" ]; then
            echo "Windows exe created"
          else
            echo "No exe"
            find build -name "*.exe" -type f
            exit 1
          fi
        else
          if [ -f "build/${GITHUB_REPOSITORY#*/}" ]; then
            echo "Exe created"
            file "build/${GITHUB_REPOSITORY#*/}"
          else
            echo "No exe found"
            find build -type f -executable
            exit 1
          fi
        fi
